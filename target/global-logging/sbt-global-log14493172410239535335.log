[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Prog\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Prog\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.9 (Oracle Corporation Java 16.0.1)
[debug]       Load.loadUnit: plugins took 80.3004ms
[debug]       Load.loadUnit: defsScala took 0.6302ms
[debug] [Loading] Scanning directory C:\Users\Prog\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Prog\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.8172 ms
[debug]           Load.resolveProject(global-plugins) took 39.4839ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Prog\.sbt\1.0\plugins, plugins: List(<none>))) took 91.6065ms
[debug] [Loading] Done in C:\Users\Prog\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 114.5777ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2313ms
[debug]     Load.loadUnit(file:/C:/Users/Prog/.sbt/1.0/plugins/, ...) took 206.4778ms
[debug]   Load.apply: load took 376.404ms
[debug]   Load.apply: resolveProjects took 5.4747ms
[debug]   Load.apply: finalTransforms took 58.4389ms
[debug]   Load.apply: config.delegates took 8.3205ms
[debug]   Load.apply: Def.make(settings)... took 774.9669ms
[debug]   Load.apply: structureIndex took 97.2953ms
[debug]   Load.apply: mkStreams took 2.6989ms
[info] loading global plugins from C:\Users\Prog\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2908.9139ms
[debug]           Load.loadUnit: plugins took 27.0615ms
[debug]           Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory E:\Projekte\BausteineVerteilterSysteme\project
[debug]             Load.loadUnit: mkEval took 4.7652ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Projekte\BausteineVerteilterSysteme\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4878 ms
[info] loading settings for project bausteineverteiltersysteme-build from idea2.sbt ...
[debug]               Load.resolveProject(bausteineverteiltersysteme-build) took 2.9595ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bausteineverteiltersysteme-build, base: E:\Projekte\BausteineVerteilterSysteme\project, plugins: List(<none>))) took 4.8813ms
[debug] [Loading] Done in E:\Projekte\BausteineVerteilterSysteme\project, returning: (bausteineverteiltersysteme-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 130.8765ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.6784ms
[debug]         Load.loadUnit(file:/E:/Projekte/BausteineVerteilterSysteme/project/, ...) took 164.3382ms
[debug]       Load.apply: load took 166.3234ms
[debug]       Load.apply: resolveProjects took 0.11ms
[debug]       Load.apply: finalTransforms took 16.2416ms
[debug]       Load.apply: config.delegates took 0.3679ms
[debug]       Load.apply: Def.make(settings)... took 83.9511ms
[debug]       Load.apply: structureIndex took 27.204ms
[debug]       Load.apply: mkStreams took 0.0016ms
[info] loading project definition from E:\Projekte\BausteineVerteilterSysteme\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 577.3853ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory E:\Projekte\BausteineVerteilterSysteme
[debug]       Load.loadUnit: mkEval took 0.1902ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Projekte\BausteineVerteilterSysteme, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7415 ms
[info] loading settings for project bausteineverteiltersysteme from build.sbt ...
[debug]         Load.resolveProject(bausteineverteiltersysteme) took 36.1872ms
[debug]       Load.loadTransitive: finalizeProject(Project(id bausteineverteiltersysteme, base: E:\Projekte\BausteineVerteilterSysteme, plugins: List(<none>))) took 39.0271ms
[debug] [Loading] Done in E:\Projekte\BausteineVerteilterSysteme, returning: (bausteineverteiltersysteme)
[debug]     Load.loadUnit: loadedProjectsRaw took 113.0125ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.9262ms
[debug]   Load.loadUnit(file:/E:/Projekte/BausteineVerteilterSysteme/, ...) took 698.0349ms
[debug] Load.apply: load took 699.4123ms
[debug] Load.apply: resolveProjects took 0.2185ms
[debug] Load.apply: finalTransforms took 25.0645ms
[debug] Load.apply: config.delegates took 0.3573ms
[debug] Load.apply: Def.make(settings)... took 76.4434ms
[debug] Load.apply: structureIndex took 22.7516ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to BausteineVerteilterSysteme (in build file:/E:/Projekte/BausteineVerteilterSysteme/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56269 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56269, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to BausteineVerteilterSysteme (in build file:/E:/Projekte/BausteineVerteilterSysteme/)
[debug] > Exec(idea-shell, None, None)
